# This is a basic workflow to help you get started with Actions

name: CI-CD

env:
  EB_PACKAGE_S3_BUCKET_NAME : "flask-app-01"  
  EB_APPLICATION_NAME       : "Myflask"
  EB_ENVIRONMENT_NAME       : "Myflask-env"
  DEPLOY_PACKAGE_NAME       : "flask-app-${{ github.sha }}.zip"
  AWS_REGION_NAME           : "ap-south-1"

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  my_ci_pipline: 
    runs-on: ubuntu-latest
    
    steps: 
      - name: Git clone our repository
        uses: actions/checkout@v1
        
        
      - name: Create ZIP deployment package 
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
        
        
      - name: Configure my AWS Credentils
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    : ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region           : ${{ env.AWS_REGION_NAME }}
          
      - name: Copy our Deployment package to S3 bucket
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME}}/
         
     
      - name: Print nice message pn completion of CI Pipline 
        run : echo "CI Pipeline part finished successfully "
        
        
  my_cd_pipline: 
    runs-on: ubuntu-latest
    needs: [my_ci_pipline]
    
    steps: 
      - name: Configure my AWS Credentils
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    : ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region           : ${{ env.AWS_REGION_NAME }}
          
          
      - name: Create new ElasticBeanstalk Application Version
        run : | 
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "Ver-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"
          
      - name: Deploy our new Application Version
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"
        
        
      - name: Print nice message pn completion of CD Pipline 
        run: echo "CD Pipeline part finished successfully"
